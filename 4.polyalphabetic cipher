#include <stdio.h>
#include <string.h>
#include <ctype.h>
void encrypt(char* plaintext, char* key, char* ciphertext) {
    int textLen = strlen(plaintext);
    int keyLen = strlen(key);
    int i, j = 0;
    for (i = 0; i < textLen; i++) {
        char ch = plaintext[i];
        if (isalpha(ch)) {
            int shift = tolower(key[j % keyLen]) - 'a'; 
            if (isupper(ch)) {
                ciphertext[i] = ((ch - 'A' + shift) % 26) + 'A'; 
            } else {
                ciphertext[i] = ((ch - 'a' + shift) % 26) + 'a'; 
            }
            j++; 
        } else {
            ciphertext[i] = ch; 
        }
    }
    ciphertext[textLen] = '\0'; 
}
void decrypt(char* ciphertext, char* key, char* plaintext) {
    int textLen = strlen(ciphertext);
    int keyLen = strlen(key);
    int i, j = 0;
    for (i = 0; i < textLen; i++) {
        char ch = ciphertext[i];
        if (isalpha(ch)) {
            int shift = tolower(key[j % keyLen]) - 'a'; 
            if (isupper(ch)) {
                plaintext[i] = ((ch - 'A' - shift + 26) % 26) + 'A'; 
            } else {
                plaintext[i] = ((ch - 'a' - shift + 26) % 26) + 'a';
            }
            j++; 
        } else {
            plaintext[i] = ch; 
        }
    }
    plaintext[textLen] = '\0'; 
}
int main() {
    char plaintext[100], key[100], ciphertext[100], decryptedText[100];
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0'; 
    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = '\0';
    encrypt(plaintext, key, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);
    decrypt(ciphertext, key, decryptedText);
    printf("Decrypted text: %s\n", decryptedText);
    return 0;
}
