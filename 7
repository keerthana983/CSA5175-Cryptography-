#include <stdio.h>
#include <string.h>
#define MAX_CIPHERTEXT_LEN 500
void print_frequency(char *ciphertext) {
    int freq[256] = {0};  
    int len = strlen(ciphertext);
    for (int i = 0; i < len; i++) {
        freq[(int)ciphertext[i]]++;
    }
    printf("Character frequencies:\n");
    for (int i = 0; i < 256; i++) {
        if (freq[i] > 0) {
            printf("%c: %d\n", i, freq[i]);
        }
    }
}
void substitute_ciphertext(char *ciphertext, char *decrypted_text, char *substitution) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        char cipher_char = ciphertext[i];
        if (cipher_char >= 'a' && cipher_char <= 'z') {
            decrypted_text[i] = substitution[cipher_char - 'a'];
        } else if (cipher_char >= 'A' && cipher_char <= 'Z') {
            decrypted_text[i] = substitution[cipher_char - 'A'];
        } else {
            decrypted_text[i] = cipher_char; 
        }
    }
    decrypted_text[strlen(ciphertext)] = '\0'; 
}
int main() {
    char ciphertext[MAX_CIPHERTEXT_LEN] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81(‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";
    print_frequency(ciphertext);
    char substitution[26] = {'e', 't', 'a', 'o', 'i', 'n', 's', 'h', 'r', 'd', 'l', 'u', 'c', 'm', 'f', 'p', 'g', 'y', 'b', 'v', 'k', 'w', 'x', 'z', 'j', 'q'};
    char decrypted_text[MAX_CIPHERTEXT_LEN];
    substitute_ciphertext(ciphertext, decrypted_text, substitution);
    printf("\nDecrypted Message:\n%s\n", decrypted_text);
    return 0;
}
